{"version":3,"sources":["components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","navState","toggleNav","className","role","aria-label","target","href","src","process","aria-expanded","data-target","onClick","console","log","aria-hidden","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAmCeA,MAjCf,WAAe,IAAD,EACoBC,mBAAS,IAD7B,mBACHC,EADG,KACOC,EADP,KAOV,OACA,qBAAKC,UAAU,wBAAwBC,KAAK,aAAaC,aAAW,kBAApE,SACI,sBAAKF,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAGA,UAAU,cAAcG,OAAO,SAASC,KAAK,8BAAhD,UAA8E,qBAAKC,IAAKC,wCAAxF,yBACA,oBAAGN,UAAS,wBAAmBF,GAAYG,KAAK,SAASC,aAAW,OAAOK,gBAAc,QAAQC,cAAY,WAAWC,QATpI,WACqBV,EAAL,IAAZD,EAA2B,YAAyB,IACpDY,QAAQC,IAAIb,IAOJ,UACA,sBAAMc,cAAY,SAClB,sBAAMA,cAAY,SAClB,sBAAMA,cAAY,eAGtB,sBAAKZ,UAAS,sBAAiBF,GAAYe,GAAG,UAA9C,UACI,qBAAKb,UAAU,iBACf,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,cAAcI,KAAK,YAAhC,sBACA,mBAAGJ,UAAU,cAAcI,KAAK,gCAAgCD,OAAO,SAAvE,oBACA,mBAAGH,UAAU,cAAcI,KAAK,0DAA0DD,OAAO,SAAjG,sBACA,qBAAKH,UAAU,cAAf,SACI,mBAAGA,UAAU,+BAA+BI,KAAK,0DAA0DD,OAAO,SAAlH,mC,YCfTW,MARf,WACE,OAEI,cAAC,EAAD,KCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4d35a29a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Nav(){\r\n    const [navState, toggleNav] = useState('');\r\n\r\n    function handleNav(){\r\n        navState == '' ? toggleNav('is-active') : toggleNav('');\r\n        console.log(navState);\r\n    }\r\n    return (\r\n    <nav className=\"navbar is-transparent\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"container\">\r\n            <div className=\"navbar-brand\">\r\n                <a className=\"navbar-item\" target=\"_blank\" href=\"https://github.com/radergan\"><img src={process.env.PUBLIC_URL + '/github.png'} />github.com/radergan</a>\r\n                <a className={`navbar-burger ${navState}`} role=\"button\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"#navMenu\" onClick={handleNav}>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                </a>\r\n            </div>\r\n            <div className={`navbar-menu ${navState}`} id=\"navMenu\">\r\n                <div className=\"navbar-start\"></div>\r\n                <div className=\"navbar-end\">\r\n                    <a className=\"navbar-item\" href=\"#projects\">Projects</a>\r\n                    <a className=\"navbar-item\" href=\"./patrick-j-dalton-resume.pdf\" target=\"_blank\">Resume</a>\r\n                    <a className=\"navbar-item\" href=\"https://www.linkedin.com/in/patrick-j-dalton-47bbb9192/\" target=\"_blank\">LinkedIn</a>\r\n                    <div className=\"navbar-item\">\r\n                        <a className=\"button is-rounded is-primary\" href=\"https://www.linkedin.com/in/patrick-j-dalton-47bbb9192/\" target=\"_blank\">Contact</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\nexport default Nav","import Nav from './components/Nav'\nimport './App.sass';\nimport './App.css';\n\nfunction App() {\n  return (\n\n      <Nav />\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}